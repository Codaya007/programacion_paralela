        -:    0:Source:ejemplo1.c
        -:    0:Graph:ejemplo1.gcno
        -:    0:Data:ejemplo1.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include "math.h"
        -:    3:
        -:    4:#define N 50000
        -:    5:
        -:    6:void sub1(int, double [], double *);
        -:    7:void sub2(int, double [], double *);
        -:    8:double myPow(double, double);
        -:    9:
        1:   10:int main(){
        -:   11:	double sum1, sum2;
        -:   12:	int i, j;
        -:   13:	double x[N];
    50001:   14:	for (i = 0; i < N; i++)
    50000:   15:		x[i] = 1.234;
        -:   16:		
     1001:   17:	for (j = 0; j < 1000; j++){
     1000:   18:		sub1(N, x, &sum1);
     1000:   19:		sub2(N, x, &sum2);
        -:   20:	}
        1:   21:	printf("sum1: %f, sum2: %f\n", sum1, sum2);
        -:   22:
        1:   23:	return 0;
        -:   24:}
        -:   25:
        -:   26:
        -:   27:
     1000:   28:void sub1(int n, double x[], double *sum){
        -:   29:	int i;
     1000:   30:	*sum = 0.; 
 50001000:   31:	for (i = 0; i < n; i++)
 50000000:   32:		*sum += 2. * myPow(x[i] + (x[i] - 1), 2) + 3. 
 50000000:   33:		     + i * 1. - 20 - 4. * myPow(i - 200, 2);
     1000:   34:}
        -:   35:
     1000:   36:void sub2(int n, double x[], double *sum){
        -:   37:	int i;
     1000:   38:	*sum = 0.;
 50001000:   39:	for (i = 0; i < n; i++)
 50000000:   40:		*sum += myPow(x[i], .3333333333);
     1000:   41:}
        -:   42:
        -:   43:
150000000:   44:double myPow(double x, double y){
150000000:   45:	return pow(x, y);
        -:   46:}
